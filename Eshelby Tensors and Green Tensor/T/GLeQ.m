function r = GLeQ(sub, x, theta, phi, w, C, type)
% GLeQ.m
% Global Lebedev Quadrature
%
% Input:  sub,           4 subscripts of the 4th order tensor T, 1*4 matrix;
%         x,             3 semi-axes of an inclusion, 3*1 matrix;
%         thate, phi, w, nodes and weights generated by Lebedev(m);          
%         C,             stiffness of the matrix, 1*81 matrix;
%         type,           1 for compressible material
%                        2 for incompressible material
% Output: r is the result of the numerical integration, a scalar;

%% updates:
%  30th July, 2019 by Lucy: Extended to compressible material 
%
%--------------------------------------------------------------------------
  if (type~=1)&&(type~=2)
      error('var must be 1 (compressible material) or 2 (incompressible matetial)')
  end
  
  w  = reshape(w, 1, []);
  theta = reshape(theta,1,[]);
  phi = reshape(phi,1,[]);
  x=x';
  
  if type == 1
      % Jiang 2014, Eq.B1 
      r  = partTLeb_CM(sub(1),sub(2),sub(3),sub(4),w,theta,phi,C,x);
  elseif type == 2
      % Jiang 2014, Eq.B2
      r  = partTLeb(sub(1),sub(2),sub(3),sub(4),w,theta,phi,C,x);
  end
  
% final results using Lebedev quadrature 
  r  = x(1)*x(2)*x(3)*r;
end

